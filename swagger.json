{
    "openapi": "3.0.0",
    "info": {
        "title": "Pimcore DataHub REST Adapter",
        "description": "Endpoints provided by the REST Adapter Bundle.",
        "license": {
            "name": "GPL 3.0",
            "url": "https:\/\/www.gnu.org\/licenses\/gpl-3.0.html"
        },
        "version": "2.9.1.4"
    },
    "paths": {
        "\/datahub\/rest\/{config}\/asset": {
            "post": {
                "tags": [
                    "Asset",
                ],
                "summary": "Add asset",
                "description": "Simple method to create and upload asset",
                "operationId": "post_datahub_rest_endpoints_asset_upload",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "parentId",
                        "in": "query",
                        "description": "Parent ID of element.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "file"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Asset ID",
                                            "type": "integer"
                                        },
                                        "path": {
                                            "description": "Asset path",
                                            "type": "string"
                                        },
                                        "success": {
                                            "description": "Succes response",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/asset\/update": {
            "post": {
                "tags": [
                    "Asset",
                    "Asset"
                ],
                "summary": "Update asset",
                "description": "Simple method to update and upload asset",
                "operationId": "post_datahub_rest_endpoints_asset_update",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Element ID.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "file"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Asset ID",
                                            "type": "integer"
                                        },
                                        "path": {
                                            "description": "Asset path",
                                            "type": "string"
                                        },
                                        "success": {
                                            "description": "Succes response",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/asset\/download": {
            "get": {
                "tags": [
                    "Asset"
                ],
                "summary": "Download Asset",
                "description": "Method to download binary file by asset ID.",
                "operationId": "get_datahub_rest_endpoints_asset_download",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "thumbnail",
                        "in": "query",
                        "description": "Thumbnail config nae",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/element": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Get Element (eg. Asset, Object)",
                "description": "Method to get one single element by type and ID.",
                "operationId": "get_datahub_rest_endpoints_element_get",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "total_count": {
                                            "description": "Total count of available results.",
                                            "type": "integer"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "page_cursor": {
                                            "description": "Page cursor for next page.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Element"
                ],
                "summary": "Delete Element (eg. Asset, Object)",
                "description": "Method to delete a single element by type and ID.",
                "operationId": "delete_datahub_rest_endpoints_element_delete",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Success status.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Message.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/element\/version": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Get Version of Element (eg. Asset, Object)",
                "description": "Method to get a specified version of the element by type and ID.",
                "operationId": "get_datahub_rest_endpoints_element_version",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Version ID",
                                            "type": "integer"
                                        },
                                        "cid": {
                                            "description": "Asset ID",
                                            "type": "integer"
                                        },
                                        "ctype": {
                                            "description": "Object type",
                                            "type": "string"
                                        },
                                        "note": {
                                            "description": "Version note",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Timestamp of version creation",
                                            "type": "integer"
                                        },
                                        "public": {
                                            "description": "Version is public?",
                                            "type": "boolean"
                                        },
                                        "versionCount": {
                                            "description": "Version sequence number",
                                            "type": "integer"
                                        },
                                        "autoSave": {
                                            "description": "Version is auto-save?",
                                            "type": "boolean"
                                        },
                                        "user": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "metadata": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "data": {
                                                        "type": "string"
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "config": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/element\/versions": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Get all Versions of Element (eg. Asset, Object)",
                "description": "Method to get all versions of the element by type and ID.",
                "operationId": "get_datahub_rest_endpoints_element_versions",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Version ID",
                                            "type": "integer"
                                        },
                                        "cid": {
                                            "description": "Asset ID",
                                            "type": "integer"
                                        },
                                        "ctype": {
                                            "description": "Object type",
                                            "type": "string"
                                        },
                                        "note": {
                                            "description": "Version note",
                                            "type": "string"
                                        },
                                        "date": {
                                            "description": "Timestamp of version creation",
                                            "type": "integer"
                                        },
                                        "public": {
                                            "description": "Version is public?",
                                            "type": "boolean"
                                        },
                                        "versionCount": {
                                            "description": "Version sequence number",
                                            "type": "integer"
                                        },
                                        "autoSave": {
                                            "description": "Version is auto-save?",
                                            "type": "boolean"
                                        },
                                        "user": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "index": {
                                            "type": "integer"
                                        },
                                        "scheduled": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/element\/lock": {
            "post": {
                "tags": [
                    "Element"
                ],
                "summary": "Lock Asset",
                "description": "Method to lock single element by type and ID.",
                "operationId": "post_datahub_rest_endpoints_element_lock",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Success status.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Message.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/element\/unlock": {
            "post": {
                "tags": [
                    "Element"
                ],
                "summary": "Unlock Asset",
                "description": "Method to unlock single element by type and ID.",
                "operationId": "post_datahub_rest_endpoints_element_unlock",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Success status.",
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "description": "Message.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/filter": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get filters tree",
                "description": "Method to load all filters for given config.",
                "operationId": "get_datahub_rest_endpoints_filterget",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "total_count": {
                                            "description": "Total count of available results.",
                                            "type": "integer"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "items": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "label": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/folder": {
            "post": {
                "tags": [
                    "Folder"
                ],
                "summary": "Create folder for element (eg. Asset, Object)",
                "description": "Method to create folder by type and ID.",
                "operationId": "post_datahub_rest_endpoints_folder_create",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Folder ID",
                                            "type": "integer"
                                        },
                                        "parentId": {
                                            "description": "Parent ID",
                                            "type": "integer"
                                        },
                                        "path": {
                                            "description": "Folder path",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Folder"
                ],
                "summary": "Delete folder for element (eg. Asset, Object)",
                "description": "Method to delete folder by type and ID.",
                "operationId": "delete_datahub_rest_endpoints_folder_delete",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of element.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Success status",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/search": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Search for elements",
                "description": "Method to search for elements, returns elements of all types. For paging use link provided in link header of response.",
                "operationId": "get_datahub_rest_endpoints_search",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Max items of response, default 200.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "default": 200
                        }
                    },
                    {
                        "name": "fulltext_search",
                        "in": "query",
                        "description": "Search term for fulltext search.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Define filter for further filtering. See https:\/\/pimcore.com\/docs\/pimcore\/current\/Development_Documentation\/Web_Services\/Query_Filters.html for filter syntax, implemeted operators are $not, $or, $and.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Field to order by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_cursor",
                        "in": "query",
                        "description": "Page cursor for paging. Use page cursor of link header in last response.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_aggs",
                        "in": "query",
                        "description": "Set to true to include aggregation information, default false.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "total_count": {
                                            "description": "Total count of available results.",
                                            "type": "integer"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "system": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "fullPath": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "locked": {
                                                                    "type": "boolean"
                                                                },
                                                                "parentId": {
                                                                    "type": "integer"
                                                                },
                                                                "hasChildren": {
                                                                    "type": "boolean"
                                                                },
                                                                "creationDate": {
                                                                    "type": "string"
                                                                },
                                                                "modificationDate": {
                                                                    "type": "string"
                                                                },
                                                                "subtype": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "metaData": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "dimensionData": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "width": {
                                                                    "type": "integer"
                                                                },
                                                                "height": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "xmpData": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "exifData": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "iptcData": {
                                                        "type": "array",
                                                        "items": {}
                                                    },
                                                    "binaryData": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "checksum": {
                                                                    "type": "string"
                                                                },
                                                                "filename": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "uniqueItems": true
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "page_cursor": {
                                            "description": "Page cursor for next page.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/tree-items": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "Get tree items",
                "description": "Method to load all elements of a tree level. For paging use link provided in link header of response.",
                "operationId": "get_datahub_rest_endpoints_tree_items",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of elements \u2013 asset or object.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asset",
                                "object"
                            ]
                        }
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "ID of parent element.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Max items of response, default 200.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 200
                        }
                    },
                    {
                        "name": "fulltext_search",
                        "in": "query",
                        "description": "Search term for fulltext search.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Define filter for further filtering. See https:\/\/pimcore.com\/docs\/pimcore\/current\/Development_Documentation\/Web_Services\/Query_Filters.html for filter syntax, implemeted operators are $not, $or, $and.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Field to order by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_cursor",
                        "in": "query",
                        "description": "Page cursor for paging. Use page cursor of link header in last response.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_aggs",
                        "in": "query",
                        "description": "Set to true to include aggregation information, default false.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "total_count": {
                                            "description": "Total count of available results.",
                                            "type": "integer"
                                        },
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "system": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "fullPath": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "locked": {
                                                                    "type": "boolean"
                                                                },
                                                                "parentId": {
                                                                    "type": "integer"
                                                                },
                                                                "hasChildren": {
                                                                    "type": "boolean"
                                                                },
                                                                "creationDate": {
                                                                    "type": "string"
                                                                },
                                                                "modificationDate": {
                                                                    "type": "string"
                                                                },
                                                                "subtype": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "page_cursor": {
                                            "description": "Page cursor for next page.",
                                            "type": "string"
                                        },
                                        "next": {
                                            "description": "Link to next page. Use this link for paging.",
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "prev": {
                                            "description": "Link to previous page. Use this link for paging.",
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/upload\/start": {
            "get": {
                "tags": [
                    "Uploads (Chunked)"
                ],
                "summary": "Get upload session",
                "description": "Return information about an upload session.",
                "operationId": "get_datahub_rest_endpoints_upload_upload_start_get",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "cihub"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the upload session.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "01HAPEWC2QAD29AMJC9RM17CAH"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns an upload session object."
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Uploads (Chunked)"
                ],
                "summary": "Create an upload session for a new or existing asset",
                "description": "Creates an upload session for a new or existing asset.",
                "operationId": "post_datahub_rest_endpoints_upload_upload_start",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_name",
                        "in": "query",
                        "description": "The name of new file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "Newfile.pdf"
                    },
                    {
                        "name": "filesize",
                        "in": "query",
                        "description": "The size of new file",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "104857600"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Parent ID of asset.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    },
                    {
                        "name": "asset_id",
                        "in": "query",
                        "description": "Asset ID of asset. When entered, this function updates an existing asset.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "0"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns a new upload session."
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/upload\/{id}": {
            "delete": {
                "tags": [
                    "Uploads (Chunked)"
                ],
                "summary": "Remove upload session",
                "description": "Abort an upload session and discard all data uploaded.",
                "operationId": "delete_datahub_rest_endpoints_upload_upload_abort",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "cihub"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the upload session.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "01HAPEWC2QAD29AMJC9RM17CAH"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "A blank response is returned if the session was successfully aborted."
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/upload\/{id}\/commit": {
            "post": {
                "tags": [
                    "Uploads (Chunked)"
                ],
                "summary": "Commit upload session",
                "description": "Close an upload session and create a file from the uploaded chunks.",
                "operationId": "post_datahub_rest_endpoints_upload_upload_commit",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "cihub"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the upload session.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "01HAPEWC2QAD29AMJC9RM17CAH"
                    },
                    {
                        "name": "parts",
                        "in": "query",
                        "description": "The list details for the uploaded parts",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns a new upload session."
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/upload\/{id}\/parts": {
            "get": {
                "tags": [
                    "Uploads (Chunked)"
                ],
                "summary": "List parts",
                "description": "Return a list of the chunks uploaded to the upload session so far.",
                "operationId": "get_datahub_rest_endpoints_upload_upload_list_parts",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "cihub"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the upload session.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "01HAPEWC2QAD29AMJC9RM17CAH"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns a new upload session.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "entries": {
                                            "description": "Parts array",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Part ID",
                                                        "type": "string"
                                                    },
                                                    "checksum": {
                                                        "description": "Checksum of the part",
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "description": "Size of the part",
                                                        "type": "integer"
                                                    },
                                                    "ordinal": {
                                                        "description": "Ordinal number of the part",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total": {
                                            "description": "Total uploaded parts",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "example": {
                                    "entries": [
                                        {
                                            "id": "01HAPEWC2QAD29AMJC9RM17CAH",
                                            "checksum": "672dbdbcf8a83ebdf9225ef6f920bb0b5b3bc7fa8f73078e3a1d0",
                                            "size": 4857600,
                                            "ordinal": 1
                                        },
                                        {
                                            "id": "01HAPEWC2QAD29AMJC9RM1723A",
                                            "checksum": "6eb3746e6273a5c4e656bef1536e6cec36efe53fa1d010d548942",
                                            "size": 7857600,
                                            "ordinal": 2
                                        }
                                    ],
                                    "total": 2
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/upload\/{id}\/part": {
            "put": {
                "tags": [
                    "Uploads (Chunked)"
                ],
                "summary": "Upload part of file",
                "description": "Return the status of the upload.",
                "operationId": "put_datahub_rest_endpoints_upload_upload_part",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "cihub"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the upload session.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "01HAPEWC2QAD29AMJC9RM17CAH"
                    },
                    {
                        "name": "ordinal",
                        "in": "query",
                        "description": "The ordinal number of the upload part.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "The binary content of the file part.",
                    "content": {
                        "application\/octet-stream": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/upload\/{id}\/status": {
            "get": {
                "tags": [
                    "Uploads (Chunked)"
                ],
                "summary": "Get upload status",
                "description": "Return the status of the upload.",
                "operationId": "get_datahub_rest_endpoints_upload_upload_status",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "cihub"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the upload session.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "01HAPEWC2QAD29AMJC9RM17CAH"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "\/datahub\/rest\/{config}\/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get me",
                "description": "Get information about me",
                "operationId": "get_datahub_rest_endpoints_user_me",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Bearer (in Swagger UI use authorize feature to set header)"
                    },
                    {
                        "name": "config",
                        "in": "path",
                        "description": "Name of the config.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "User ID",
                                            "type": "integer"
                                        },
                                        "username": {
                                            "description": "Username",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}
