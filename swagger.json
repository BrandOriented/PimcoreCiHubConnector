{ "openapi": "3.0.0", "info": { "title": "Pimcore DataHub REST Adapter", "description": "Endpoints provided by the REST Adapter Bundle.", "license": { "name": "GPL 3.0", "url": "https:\/\/www.gnu.org\/licenses\/gpl-3.0.html" }, "version": "2.1.7" }, "paths": { "\/datahub\/rest\/{config}\/get-element": { "get": { "tags": [ "Asset" ], "summary": "Method to get single element by type and ID.", "description": "Method to get one single element by type and ID.", "operationId": "get_datahub_rest_endpoints_get_element", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "type", "in": "query", "description": "Type of elements \u2013 asset or object.", "required": true, "schema": { "type": "string", "enum": [ "asset", "object" ] } }, { "name": "id", "in": "query", "description": "ID of element.", "required": true, "schema": { "type": "integer" } } ], "responses": { "200": { "description": "Successful operation.", "content": { "application\/json": { "schema": { "properties": { "total_count": { "description": "Total count of available results.", "type": "integer" }, "items": { "type": "array", "items": {} }, "page_cursor": { "description": "Page cursor for next page.", "type": "string" } }, "type": "object" } } } }, "400": { "description": "Not found" }, "401": { "description": "Access denied" }, "500": { "description": "Server error" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/version": { "get": { "tags": [ "Asset" ], "summary": "Method to get a specified version of the element by ID.", "description": "Method to get a specified version of the element by ID.", "operationId": "get_datahub_rest_endpoints_version", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "id", "in": "query", "description": "ID of element.", "required": true, "schema": { "type": "integer" } } ], "responses": { "200": { "description": "Successful operation.", "content": { "application\/json": { "schema": { "properties": { "id": { "description": "Version ID", "type": "integer" }, "cid": { "description": "Asset ID", "type": "integer" }, "ctype": { "description": "Object type", "type": "string" }, "note": { "description": "Version note", "type": "string" }, "date": { "description": "Timestamp of version creation", "type": "integer" }, "public": { "description": "Version is public?", "type": "boolean" }, "versionCount": { "description": "Version sequence number", "type": "integer" }, "autoSave": { "description": "Version is auto-save?", "type": "boolean" }, "user": { "type": "array", "items": { "properties": { "name": { "type": "string" }, "id": { "type": "integer" } }, "type": "object" } }, "metadata": { "type": "array", "items": { "properties": { "data": { "type": "string" }, "language": { "type": "string", "nullable": true }, "name": { "type": "string" }, "type": { "type": "string" }, "config": { "type": "string", "nullable": true } }, "type": "object" } } }, "type": "object" } } } }, "400": { "description": "Not found" }, "401": { "description": "Access denied" }, "500": { "description": "Server error" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/versions": { "get": { "tags": [ "Asset" ], "summary": "Method to get all versions of the element by type and ID.", "description": "Method to get all versions of the element by type and ID.", "operationId": "get_datahub_rest_endpoints_versions", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "type", "in": "query", "description": "Type of elements \u2013 asset or object.", "required": true, "schema": { "type": "string", "enum": [ "asset", "object" ] } }, { "name": "id", "in": "query", "description": "ID of element.", "required": true, "schema": { "type": "integer" } } ], "responses": { "200": { "description": "Successful operation.", "content": { "application\/json": { "schema": { "properties": { "id": { "description": "Version ID", "type": "integer" }, "cid": { "description": "Asset ID", "type": "integer" }, "ctype": { "description": "Object type", "type": "string" }, "note": { "description": "Version note", "type": "string" }, "date": { "description": "Timestamp of version creation", "type": "integer" }, "public": { "description": "Version is public?", "type": "boolean" }, "versionCount": { "description": "Version sequence number", "type": "integer" }, "autoSave": { "description": "Version is auto-save?", "type": "boolean" }, "user": { "type": "array", "items": { "properties": { "name": { "type": "string" }, "id": { "type": "integer" } }, "type": "object" } }, "index": { "type": "integer" }, "scheduled": { "type": "integer" } }, "type": "object" } } } }, "400": { "description": "Not found" }, "401": { "description": "Access denied" }, "500": { "description": "Server error" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/lock-asset": { "post": { "tags": [ "Asset" ], "summary": "Method to lock single element by type and ID.", "description": "Method to lock single element by type and ID.", "operationId": "post_datahub_rest_endpoints_lock_asset", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "type", "in": "query", "description": "Type of elements \u2013 asset or object.", "required": true, "schema": { "type": "string", "enum": [ "asset", "object" ] } }, { "name": "id", "in": "query", "description": "ID of element.", "required": true, "schema": { "type": "integer" } } ], "responses": { "200": { "description": "Successful operation.", "content": { "application\/json": { "schema": { "properties": { "success": { "description": "Success status.", "type": "boolean" }, "message": { "description": "Message.", "type": "string" } }, "type": "object" } } } }, "400": { "description": "Not found" }, "401": { "description": "Access denied" }, "500": { "description": "Server error" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/unlock-asset": { "post": { "tags": [ "Asset" ], "summary": "Method to unlock single element by type and ID.", "description": "Method to unlock single element by type and ID.", "operationId": "post_datahub_rest_endpoints_unlock_asset", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "type", "in": "query", "description": "Type of elements \u2013 asset or object.", "required": true, "schema": { "type": "string", "enum": [ "asset", "object" ] } }, { "name": "id", "in": "query", "description": "ID of element.", "required": true, "schema": { "type": "integer" } } ], "responses": { "200": { "description": "Successful operation.", "content": { "application\/json": { "schema": { "properties": { "success": { "description": "Success status.", "type": "boolean" }, "message": { "description": "Message.", "type": "string" } }, "type": "object" } } } }, "400": { "description": "Not found" }, "401": { "description": "Access denied" }, "500": { "description": "Server error" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/download-asset": { "get": { "tags": [ "Asset" ], "operationId": "get_datahub_rest_endpoints_download_asset", "parameters": [ { "name": "config", "in": "path", "required": true, "schema": { "type": "string" } } ], "responses": { "default": { "description": "" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/search": { "get": { "tags": [ "Search" ], "description": "Method to search for elements, returns elements of all types. For paging use link provided in link header of response.", "operationId": "get_datahub_rest_endpoints_search", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "size", "in": "query", "description": "Max items of response, default 200.", "required": true, "schema": { "type": "integer", "default": 200 } }, { "name": "fulltext_search", "in": "query", "description": "Search term for fulltext search.", "required": false, "schema": { "type": "string" } }, { "name": "filter", "in": "query", "description": "Define filter for further filtering. See https:\/\/pimcore.com\/docs\/pimcore\/current\/Development_Documentation\/Web_Services\/Query_Filters.html for filter syntax, implemeted operators are $not, $or, $and.", "required": false, "schema": { "type": "string" } }, { "name": "order_by", "in": "query", "description": "Field to order by.", "required": false, "schema": { "type": "string" } }, { "name": "page_cursor", "in": "query", "description": "Page cursor for paging. Use page cursor of link header in last response.", "required": false, "schema": { "type": "string" } }, { "name": "include_aggs", "in": "query", "description": "Set to true to include aggregation information, default false.", "required": false, "schema": { "type": "boolean", "default": false } } ], "responses": { "200": { "description": "Successful operation.", "content": { "application\/json": { "schema": { "properties": { "total_count": { "description": "Total count of available results.", "type": "integer" }, "items": { "type": "array", "items": {} }, "page_cursor": { "description": "Page cursor for next page.", "type": "string" } }, "type": "object" } } } }, "400": { "description": "Not found" }, "401": { "description": "Access denied" }, "500": { "description": "Server error" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/tree-items": { "get": { "tags": [ "Search" ], "description": "Method to load all elements of a tree level. For paging use link provided in link header of response.", "operationId": "get_datahub_rest_endpoints_tree_items", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "type", "in": "query", "description": "Type of elements \u2013 asset or object.", "required": true, "schema": { "type": "string", "enum": [ "asset", "object" ] } }, { "name": "parent_id", "in": "query", "description": "ID of parent element.", "required": false, "schema": { "type": "integer" } }, { "name": "include_folders", "in": "query", "description": "Define if folders should be included, default true.", "required": false, "schema": { "type": "bool", "default": true } }, { "name": "size", "in": "query", "description": "Max items of response, default 200.", "required": false, "schema": { "type": "integer", "default": 200 } }, { "name": "fulltext_search", "in": "query", "description": "Search term for fulltext search.", "required": false, "schema": { "type": "string" } }, { "name": "filter", "in": "query", "description": "Define filter for further filtering. See https:\/\/pimcore.com\/docs\/pimcore\/current\/Development_Documentation\/Web_Services\/Query_Filters.html for filter syntax, implemeted operators are $not, $or, $and.", "required": false, "schema": { "type": "string" } }, { "name": "order_by", "in": "query", "description": "Field to order by.", "required": false, "schema": { "type": "string" } }, { "name": "page_cursor", "in": "query", "description": "Page cursor for paging. Use page cursor of link header in last response.", "required": false, "schema": { "type": "string" } }, { "name": "include_aggs", "in": "query", "description": "Set to true to include aggregation information, default false.", "required": false, "schema": { "type": "boolean", "default": false } } ], "responses": { "200": { "description": "Successful operation.", "content": { "application\/json": { "schema": { "properties": { "total_count": { "description": "Total count of available results.", "type": "integer" }, "items": { "type": "array", "items": {} }, "page_cursor": { "description": "Page cursor for next page.", "type": "string" } }, "type": "object" } } } }, "400": { "description": "Not found" }, "401": { "description": "Access denied" }, "500": { "description": "Server error" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/asset\/add-asset": { "post": { "tags": [ "Uploads" ], "description": "Simple method to create and upload asset", "operationId": "post_datahub_rest_endpoints_asset_upload_asset", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "type", "in": "query", "description": "Type of elements \u2013 asset or object.", "required": true, "schema": { "type": "string", "enum": [ "asset", "object" ] } } ], "requestBody": { "content": { "multipart\/form-data": { "schema": { "properties": { "file": { "type": "string", "format": "binary" } }, "type": "file" } } } }, "responses": { "200": { "description": "Successful operation.", "content": { "application\/json": { "schema": { "properties": { "id": { "description": "Asset ID", "type": "integer" }, "path": { "description": "Asset path", "type": "string" }, "success": { "description": "Succes response", "type": "boolean" } }, "type": "object" } } } }, "400": { "description": "Not found" }, "401": { "description": "Access denied" }, "500": { "description": "Server error" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/asset\/upload\/start": { "get": { "tags": [ "Uploads (Chunked)" ], "description": "Return information about an upload session.", "operationId": "get_datahub_rest_endpoints_asset_upload_start_get", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" }, "example": "cihub" }, { "name": "id", "in": "path", "description": "The ID of the upload session.", "required": true, "schema": { "type": "string" }, "example": "01HAPEWC2QAD29AMJC9RM17CAH" } ], "responses": { "200": { "description": "Returns an upload session object." } }, "security": [ { "Bearer": [] } ] }, "post": { "tags": [ "Uploads (Chunked)" ], "description": "Creates an upload session for a new file.", "operationId": "post_datahub_rest_endpoints_asset_upload_start", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" } }, { "name": "filename", "in": "query", "description": "The name of new file", "required": true, "schema": { "type": "string" }, "example": "Newfile.pdf" }, { "name": "filesize", "in": "query", "description": "The size of new file", "required": true, "schema": { "type": "integer" }, "example": "104857600" }, { "name": "folder_id", "in": "query", "description": "The size of new file", "required": true, "schema": { "type": "integer" }, "example": "0" } ], "responses": { "201": { "description": "Returns a new upload session." } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/asset\/{id}": { "delete": { "tags": [ "Uploads (Chunked)" ], "description": "Abort an upload session and discard all data uploaded.", "operationId": "delete_datahub_rest_endpoints_asset_upload_abort", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" }, "example": "cihub" }, { "name": "id", "in": "path", "description": "The ID of the upload session.", "required": true, "schema": { "type": "string" }, "example": "01HAPEWC2QAD29AMJC9RM17CAH" } ], "responses": { "204": { "description": "A blank response is returned if the session was successfully aborted." } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/asset\/{id}\/commit": { "post": { "tags": [ "Uploads (Chunked)" ], "description": "Close an upload session and create a file from the uploaded chunks.", "operationId": "post_datahub_rest_endpoints_asset_upload_commit", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" }, "example": "cihub" }, { "name": "id", "in": "path", "description": "The ID of the upload session.", "required": true, "schema": { "type": "string" }, "example": "01HAPEWC2QAD29AMJC9RM17CAH" }, { "name": "assetId", "in": "query", "description": "The ID of the asset.", "required": true, "schema": { "type": "integer" }, "example": "0" }, { "name": "parts", "in": "query", "description": "The list details for the uploaded parts", "required": true, "schema": { "type": "array", "items": {} } } ], "responses": { "201": { "description": "Returns a new upload session." } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/asset\/{id}\/parts": { "get": { "tags": [ "Uploads (Chunked)" ], "description": "Return a list of the chunks uploaded to the upload session so far.", "operationId": "get_datahub_rest_endpoints_asset_upload_list_parts", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" }, "example": "cihub" }, { "name": "id", "in": "path", "description": "The ID of the upload session.", "required": true, "schema": { "type": "string" }, "example": "01HAPEWC2QAD29AMJC9RM17CAH" } ], "responses": { "201": { "description": "Returns a new upload session.", "content": { "application\/json": { "schema": { "properties": { "entries": { "description": "Parts array", "type": "array", "items": { "properties": { "id": { "description": "Part ID", "type": "string" }, "checksum": { "description": "Checksum of the part", "type": "string" }, "size": { "description": "Size of the part", "type": "integer" }, "ordinal": { "description": "Ordinal number of the part", "type": "integer" } }, "type": "object" } }, "total": { "description": "Total uploaded parts", "type": "integer" } }, "type": "object" }, "example": { "entries": [ { "id": "01HAPEWC2QAD29AMJC9RM17CAH", "checksum": "672dbdbcf8a83ebdf9225ef6f920bb0b5b3bc7fa8f73078e3a1d0", "size": 4857600, "ordinal": 1 }, { "id": "01HAPEWC2QAD29AMJC9RM1723A", "checksum": "6eb3746e6273a5c4e656bef1536e6cec36efe53fa1d010d548942", "size": 7857600, "ordinal": 2 } ], "total": 2 } } } } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/asset\/{id}\/part": { "put": { "tags": [ "Uploads (Chunked)" ], "description": "Return the status of the upload.", "operationId": "put_datahub_rest_endpoints_asset_upload_part", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" }, "example": "cihub" }, { "name": "id", "in": "path", "description": "The ID of the upload session.", "required": true, "schema": { "type": "string" }, "example": "01HAPEWC2QAD29AMJC9RM17CAH" }, { "name": "ordinal", "in": "query", "description": "The ordinal number of the upload part.", "required": true, "schema": { "type": "integer" }, "example": "1" } ], "requestBody": { "description": "The binary content of the file part.", "content": { "application\/octet-stream": {} } }, "responses": { "200": { "description": "" } }, "security": [ { "Bearer": [] } ] } }, "\/datahub\/rest\/{config}\/asset\/{id}\/status": { "get": { "tags": [ "Uploads (Chunked)" ], "description": "Return the status of the upload.", "operationId": "get_datahub_rest_endpoints_asset_upload_status", "parameters": [ { "name": "Authorization", "in": "header", "description": "Bearer (in Swagger UI use authorize feature to set header)" }, { "name": "config", "in": "path", "description": "Name of the config.", "required": true, "schema": { "type": "string" }, "example": "cihub" }, { "name": "id", "in": "path", "description": "The ID of the upload session.", "required": true, "schema": { "type": "string" }, "example": "01HAPEWC2QAD29AMJC9RM17CAH" } ], "responses": { "200": { "description": "" } }, "security": [ { "Bearer": [] } ] } } }, "components": { "securitySchemes": { "Bearer": { "type": "http", "scheme": "bearer" } } }, "security": [ { "Bearer": [] } ] }
